// <auto-generated />
using System;
using MVVM_WPF_Schedule.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MVVM_WPF_Schedule.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240224154749_AddTeacherTableConfiguration")]
    partial class AddTeacherTableConfiguration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MVVM_WPF_Schedule.Models.Entities.DayOfWeek", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DaysOfWeek");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Понедельник"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Вторник"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Среда"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Четверг"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Пятница"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Суббота"
                        });
                });

            modelBuilder.Entity("MVVM_WPF_Schedule.Models.Entities.Discipline", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Disciplines");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Информационные технологии и платформы разработки информационных систем (ч.1)"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Физическая культура"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Иностранный язык"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Информационные системы в организации авиационного производства"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Инновационное предпринимательство"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Безопасность функционирования информационных систем"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Организация администрирования компьютерных систем"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Эксплуатация объектов сетевой инфраструктуры (ч.1)"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Эксплуатация объектов сетевой инфраструктуры (ч.2)"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Информационные технологии и платформы разработки информационных систем (ч.2)"
                        });
                });

            modelBuilder.Entity("MVVM_WPF_Schedule.Models.Entities.Group", b =>
                {
                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AdmissionYear")
                        .HasColumnType("int");

                    b.Property<bool>("IsBudget")
                        .HasColumnType("bit");

                    b.Property<string>("SpecialtyCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Number");

                    b.HasIndex("SpecialtyCode");

                    b.ToTable("Groups");

                    b.HasData(
                        new
                        {
                            Number = "20И1",
                            AdmissionYear = 2020,
                            IsBudget = true,
                            SpecialtyCode = "09.02.04"
                        },
                        new
                        {
                            Number = "20И2",
                            AdmissionYear = 2020,
                            IsBudget = false,
                            SpecialtyCode = "09.02.04"
                        },
                        new
                        {
                            Number = "20КС1",
                            AdmissionYear = 2020,
                            IsBudget = true,
                            SpecialtyCode = "09.02.02"
                        },
                        new
                        {
                            Number = "20КС2",
                            AdmissionYear = 2020,
                            IsBudget = false,
                            SpecialtyCode = "09.02.02"
                        });
                });

            modelBuilder.Entity("MVVM_WPF_Schedule.Models.Entities.GroupDiscipline", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DisciplineId")
                        .HasColumnType("int");

                    b.Property<string>("GroupNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("GroupNumber1")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("HoursCountPerWeek")
                        .HasColumnType("int");

                    b.Property<int?>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DisciplineId");

                    b.HasIndex("GroupNumber");

                    b.HasIndex("GroupNumber1");

                    b.HasIndex("TeacherId");

                    b.ToTable("GroupsDisciplines");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DisciplineId = 1,
                            GroupNumber = "20И1",
                            HoursCountPerWeek = 400,
                            TeacherId = 2
                        },
                        new
                        {
                            Id = 2,
                            DisciplineId = 2,
                            GroupNumber = "20И1",
                            HoursCountPerWeek = 400,
                            TeacherId = 4
                        },
                        new
                        {
                            Id = 3,
                            DisciplineId = 3,
                            GroupNumber = "20И1",
                            HoursCountPerWeek = 400,
                            TeacherId = 1
                        },
                        new
                        {
                            Id = 4,
                            DisciplineId = 4,
                            GroupNumber = "20И1",
                            HoursCountPerWeek = 400,
                            TeacherId = 3
                        },
                        new
                        {
                            Id = 5,
                            DisciplineId = 1,
                            GroupNumber = "20И2",
                            HoursCountPerWeek = 400,
                            TeacherId = 3
                        },
                        new
                        {
                            Id = 6,
                            DisciplineId = 2,
                            GroupNumber = "20И2",
                            HoursCountPerWeek = 400,
                            TeacherId = 4
                        },
                        new
                        {
                            Id = 7,
                            DisciplineId = 3,
                            GroupNumber = "20И2",
                            HoursCountPerWeek = 400,
                            TeacherId = 1
                        },
                        new
                        {
                            Id = 8,
                            DisciplineId = 4,
                            GroupNumber = "20И2",
                            HoursCountPerWeek = 400,
                            TeacherId = 3
                        },
                        new
                        {
                            Id = 9,
                            DisciplineId = 6,
                            GroupNumber = "20КС1",
                            HoursCountPerWeek = 400,
                            TeacherId = 6
                        },
                        new
                        {
                            Id = 10,
                            DisciplineId = 8,
                            GroupNumber = "20КС1",
                            HoursCountPerWeek = 400,
                            TeacherId = 10
                        },
                        new
                        {
                            Id = 11,
                            DisciplineId = 3,
                            GroupNumber = "20КС1",
                            HoursCountPerWeek = 400,
                            TeacherId = 1
                        },
                        new
                        {
                            Id = 12,
                            DisciplineId = 2,
                            GroupNumber = "20КС1",
                            HoursCountPerWeek = 400,
                            TeacherId = 4
                        },
                        new
                        {
                            Id = 13,
                            DisciplineId = 6,
                            GroupNumber = "20КС2",
                            HoursCountPerWeek = 400,
                            TeacherId = 6
                        },
                        new
                        {
                            Id = 14,
                            DisciplineId = 8,
                            GroupNumber = "20КС2",
                            HoursCountPerWeek = 400,
                            TeacherId = 10
                        },
                        new
                        {
                            Id = 15,
                            DisciplineId = 3,
                            GroupNumber = "20КС2",
                            HoursCountPerWeek = 400,
                            TeacherId = 1
                        },
                        new
                        {
                            Id = 16,
                            DisciplineId = 2,
                            GroupNumber = "20КС2",
                            HoursCountPerWeek = 400,
                            TeacherId = 4
                        },
                        new
                        {
                            Id = 17,
                            DisciplineId = 10,
                            GroupNumber = "20И1",
                            HoursCountPerWeek = 400,
                            TeacherId = 11
                        },
                        new
                        {
                            Id = 18,
                            DisciplineId = 10,
                            GroupNumber = "20И2",
                            HoursCountPerWeek = 400,
                            TeacherId = 11
                        },
                        new
                        {
                            Id = 19,
                            DisciplineId = 9,
                            GroupNumber = "20КС1",
                            HoursCountPerWeek = 400,
                            TeacherId = 8
                        },
                        new
                        {
                            Id = 20,
                            DisciplineId = 9,
                            GroupNumber = "20КС2",
                            HoursCountPerWeek = 400,
                            TeacherId = 8
                        });
                });

            modelBuilder.Entity("MVVM_WPF_Schedule.Models.Entities.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Секретарь"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Диспетчер"
                        });
                });

            modelBuilder.Entity("MVVM_WPF_Schedule.Models.Entities.ScheduleItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DayOfWeekId")
                        .HasColumnType("int");

                    b.Property<int>("GroupDisciplineId")
                        .HasColumnType("int");

                    b.Property<int>("LessonNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DayOfWeekId");

                    b.HasIndex("GroupDisciplineId");

                    b.ToTable("ScheduleItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DayOfWeekId = 1,
                            GroupDisciplineId = 8,
                            LessonNumber = 4
                        },
                        new
                        {
                            Id = 2,
                            DayOfWeekId = 1,
                            GroupDisciplineId = 6,
                            LessonNumber = 5
                        },
                        new
                        {
                            Id = 3,
                            DayOfWeekId = 2,
                            GroupDisciplineId = 18,
                            LessonNumber = 2
                        },
                        new
                        {
                            Id = 4,
                            DayOfWeekId = 2,
                            GroupDisciplineId = 18,
                            LessonNumber = 3
                        },
                        new
                        {
                            Id = 5,
                            DayOfWeekId = 2,
                            GroupDisciplineId = 8,
                            LessonNumber = 4
                        },
                        new
                        {
                            Id = 6,
                            DayOfWeekId = 3,
                            GroupDisciplineId = 8,
                            LessonNumber = 1
                        },
                        new
                        {
                            Id = 7,
                            DayOfWeekId = 3,
                            GroupDisciplineId = 5,
                            LessonNumber = 2
                        },
                        new
                        {
                            Id = 8,
                            DayOfWeekId = 3,
                            GroupDisciplineId = 18,
                            LessonNumber = 3
                        },
                        new
                        {
                            Id = 10,
                            DayOfWeekId = 4,
                            GroupDisciplineId = 5,
                            LessonNumber = 4
                        },
                        new
                        {
                            Id = 11,
                            DayOfWeekId = 4,
                            GroupDisciplineId = 18,
                            LessonNumber = 5
                        },
                        new
                        {
                            Id = 12,
                            DayOfWeekId = 4,
                            GroupDisciplineId = 6,
                            LessonNumber = 6
                        },
                        new
                        {
                            Id = 13,
                            DayOfWeekId = 6,
                            GroupDisciplineId = 5,
                            LessonNumber = 1
                        },
                        new
                        {
                            Id = 14,
                            DayOfWeekId = 6,
                            GroupDisciplineId = 18,
                            LessonNumber = 2
                        },
                        new
                        {
                            Id = 15,
                            DayOfWeekId = 6,
                            GroupDisciplineId = 18,
                            LessonNumber = 3
                        },
                        new
                        {
                            Id = 16,
                            DayOfWeekId = 6,
                            GroupDisciplineId = 18,
                            LessonNumber = 4
                        },
                        new
                        {
                            Id = 19,
                            DayOfWeekId = 1,
                            GroupDisciplineId = 9,
                            LessonNumber = 3
                        },
                        new
                        {
                            Id = 20,
                            DayOfWeekId = 1,
                            GroupDisciplineId = 9,
                            LessonNumber = 4
                        },
                        new
                        {
                            Id = 21,
                            DayOfWeekId = 1,
                            GroupDisciplineId = 9,
                            LessonNumber = 5
                        },
                        new
                        {
                            Id = 23,
                            DayOfWeekId = 3,
                            GroupDisciplineId = 10,
                            LessonNumber = 4
                        },
                        new
                        {
                            Id = 24,
                            DayOfWeekId = 3,
                            GroupDisciplineId = 19,
                            LessonNumber = 5
                        },
                        new
                        {
                            Id = 25,
                            DayOfWeekId = 3,
                            GroupDisciplineId = 11,
                            LessonNumber = 6
                        },
                        new
                        {
                            Id = 26,
                            DayOfWeekId = 4,
                            GroupDisciplineId = 12,
                            LessonNumber = 3
                        },
                        new
                        {
                            Id = 27,
                            DayOfWeekId = 4,
                            GroupDisciplineId = 11,
                            LessonNumber = 4
                        },
                        new
                        {
                            Id = 28,
                            DayOfWeekId = 4,
                            GroupDisciplineId = 9,
                            LessonNumber = 5
                        },
                        new
                        {
                            Id = 29,
                            DayOfWeekId = 4,
                            GroupDisciplineId = 9,
                            LessonNumber = 6
                        },
                        new
                        {
                            Id = 30,
                            DayOfWeekId = 5,
                            GroupDisciplineId = 9,
                            LessonNumber = 2
                        },
                        new
                        {
                            Id = 31,
                            DayOfWeekId = 5,
                            GroupDisciplineId = 9,
                            LessonNumber = 3
                        },
                        new
                        {
                            Id = 32,
                            DayOfWeekId = 5,
                            GroupDisciplineId = 9,
                            LessonNumber = 4
                        },
                        new
                        {
                            Id = 33,
                            DayOfWeekId = 5,
                            GroupDisciplineId = 9,
                            LessonNumber = 5
                        },
                        new
                        {
                            Id = 34,
                            DayOfWeekId = 6,
                            GroupDisciplineId = 19,
                            LessonNumber = 1
                        },
                        new
                        {
                            Id = 35,
                            DayOfWeekId = 6,
                            GroupDisciplineId = 19,
                            LessonNumber = 2
                        },
                        new
                        {
                            Id = 36,
                            DayOfWeekId = 6,
                            GroupDisciplineId = 10,
                            LessonNumber = 3
                        },
                        new
                        {
                            Id = 37,
                            DayOfWeekId = 6,
                            GroupDisciplineId = 10,
                            LessonNumber = 4
                        },
                        new
                        {
                            Id = 40,
                            DayOfWeekId = 2,
                            GroupDisciplineId = 13,
                            LessonNumber = 3
                        },
                        new
                        {
                            Id = 41,
                            DayOfWeekId = 2,
                            GroupDisciplineId = 13,
                            LessonNumber = 4
                        },
                        new
                        {
                            Id = 42,
                            DayOfWeekId = 2,
                            GroupDisciplineId = 13,
                            LessonNumber = 5
                        },
                        new
                        {
                            Id = 43,
                            DayOfWeekId = 3,
                            GroupDisciplineId = 20,
                            LessonNumber = 1
                        },
                        new
                        {
                            Id = 44,
                            DayOfWeekId = 3,
                            GroupDisciplineId = 20,
                            LessonNumber = 2
                        },
                        new
                        {
                            Id = 45,
                            DayOfWeekId = 3,
                            GroupDisciplineId = 16,
                            LessonNumber = 3
                        },
                        new
                        {
                            Id = 47,
                            DayOfWeekId = 4,
                            GroupDisciplineId = 15,
                            LessonNumber = 2
                        },
                        new
                        {
                            Id = 48,
                            DayOfWeekId = 4,
                            GroupDisciplineId = 13,
                            LessonNumber = 3
                        },
                        new
                        {
                            Id = 49,
                            DayOfWeekId = 4,
                            GroupDisciplineId = 13,
                            LessonNumber = 4
                        },
                        new
                        {
                            Id = 50,
                            DayOfWeekId = 4,
                            GroupDisciplineId = 15,
                            LessonNumber = 5
                        },
                        new
                        {
                            Id = 52,
                            DayOfWeekId = 5,
                            GroupDisciplineId = 20,
                            LessonNumber = 2
                        },
                        new
                        {
                            Id = 53,
                            DayOfWeekId = 5,
                            GroupDisciplineId = 20,
                            LessonNumber = 3
                        },
                        new
                        {
                            Id = 54,
                            DayOfWeekId = 5,
                            GroupDisciplineId = 14,
                            LessonNumber = 4
                        },
                        new
                        {
                            Id = 55,
                            DayOfWeekId = 5,
                            GroupDisciplineId = 14,
                            LessonNumber = 5
                        },
                        new
                        {
                            Id = 56,
                            DayOfWeekId = 6,
                            GroupDisciplineId = 14,
                            LessonNumber = 1
                        },
                        new
                        {
                            Id = 57,
                            DayOfWeekId = 6,
                            GroupDisciplineId = 14,
                            LessonNumber = 2
                        },
                        new
                        {
                            Id = 58,
                            DayOfWeekId = 6,
                            GroupDisciplineId = 20,
                            LessonNumber = 3
                        },
                        new
                        {
                            Id = 59,
                            DayOfWeekId = 6,
                            GroupDisciplineId = 20,
                            LessonNumber = 4
                        },
                        new
                        {
                            Id = 60,
                            DayOfWeekId = 5,
                            GroupDisciplineId = 5,
                            LessonNumber = 3
                        },
                        new
                        {
                            Id = 61,
                            DayOfWeekId = 5,
                            GroupDisciplineId = 5,
                            LessonNumber = 4
                        },
                        new
                        {
                            Id = 62,
                            DayOfWeekId = 5,
                            GroupDisciplineId = 5,
                            LessonNumber = 5
                        });
                });

            modelBuilder.Entity("MVVM_WPF_Schedule.Models.Entities.Specialty", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Acronym")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Code");

                    b.HasIndex("Acronym")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Specialties");

                    b.HasData(
                        new
                        {
                            Code = "09.02.04",
                            Acronym = "И",
                            Name = "Информационные системы"
                        },
                        new
                        {
                            Code = "09.02.02",
                            Acronym = "КС",
                            Name = "Компьютерные сети"
                        });
                });

            modelBuilder.Entity("MVVM_WPF_Schedule.Models.Entities.SpecialtyDiscipline", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DisciplineId")
                        .HasColumnType("int");

                    b.Property<int>("HoursCountPerWeek")
                        .HasColumnType("int");

                    b.Property<string>("SpecialtyCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("DisciplineId");

                    b.HasIndex("SpecialtyCode");

                    b.ToTable("SpecialtiesDisciplines");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DisciplineId = 1,
                            HoursCountPerWeek = 400,
                            SpecialtyCode = "09.02.04"
                        },
                        new
                        {
                            Id = 2,
                            DisciplineId = 2,
                            HoursCountPerWeek = 400,
                            SpecialtyCode = "09.02.04"
                        },
                        new
                        {
                            Id = 3,
                            DisciplineId = 3,
                            HoursCountPerWeek = 400,
                            SpecialtyCode = "09.02.04"
                        },
                        new
                        {
                            Id = 4,
                            DisciplineId = 4,
                            HoursCountPerWeek = 400,
                            SpecialtyCode = "09.02.04"
                        },
                        new
                        {
                            Id = 5,
                            DisciplineId = 5,
                            HoursCountPerWeek = 400,
                            SpecialtyCode = "09.02.02"
                        },
                        new
                        {
                            Id = 6,
                            DisciplineId = 6,
                            HoursCountPerWeek = 400,
                            SpecialtyCode = "09.02.02"
                        },
                        new
                        {
                            Id = 7,
                            DisciplineId = 7,
                            HoursCountPerWeek = 400,
                            SpecialtyCode = "09.02.02"
                        },
                        new
                        {
                            Id = 8,
                            DisciplineId = 8,
                            HoursCountPerWeek = 400,
                            SpecialtyCode = "09.02.02"
                        },
                        new
                        {
                            Id = 9,
                            DisciplineId = 2,
                            HoursCountPerWeek = 400,
                            SpecialtyCode = "09.02.02"
                        },
                        new
                        {
                            Id = 10,
                            DisciplineId = 3,
                            HoursCountPerWeek = 400,
                            SpecialtyCode = "09.02.02"
                        },
                        new
                        {
                            Id = 11,
                            DisciplineId = 10,
                            HoursCountPerWeek = 400,
                            SpecialtyCode = "09.02.04"
                        },
                        new
                        {
                            Id = 12,
                            DisciplineId = 9,
                            HoursCountPerWeek = 400,
                            SpecialtyCode = "09.02.02"
                        });
                });

            modelBuilder.Entity("MVVM_WPF_Schedule.Models.Entities.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("FIO")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Workload")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FIO")
                        .IsUnique();

                    b.HasIndex("Phone")
                        .IsUnique();

                    b.ToTable("Teachers");

                    b.HasCheckConstraint("Workload_CHK", "Workload > 0 AND Workload <=36");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FIO = "Андреева Татьяна Эдуардовна",
                            Phone = "+7(923)456-78-90",
                            Workload = 36
                        },
                        new
                        {
                            Id = 2,
                            FIO = "Трифонова Элина Марсовна",
                            Phone = "+7(998)765-43-21",
                            Workload = 36
                        },
                        new
                        {
                            Id = 3,
                            FIO = "Нургалиева Альбина Шамсулловна",
                            Phone = "+7(955)555-55-55",
                            Workload = 36
                        },
                        new
                        {
                            Id = 4,
                            FIO = "Рязанов Евгений Владимирович",
                            Phone = "+7(966)666-66-66",
                            Workload = 36
                        },
                        new
                        {
                            Id = 5,
                            FIO = "Цыбина Евгений Александровна",
                            Phone = "+7(977)777-77-77",
                            Workload = 36
                        },
                        new
                        {
                            Id = 6,
                            FIO = "Латыпова Лилия Азгамовна",
                            Phone = "+7(955)222-31-81",
                            Workload = 36
                        },
                        new
                        {
                            Id = 7,
                            FIO = "Айметдинова Ульяна Александровна",
                            Phone = "+7(914)351-44-51",
                            Workload = 30
                        },
                        new
                        {
                            Id = 8,
                            FIO = "Сайтуколова Ольга Ремовна",
                            Phone = "+7(971)581-24-35",
                            Workload = 32
                        },
                        new
                        {
                            Id = 9,
                            FIO = "Челяева Ирина Валерьевна",
                            Phone = "+7(911)84-88-55",
                            Workload = 36
                        },
                        new
                        {
                            Id = 10,
                            FIO = "Мавлекеева Лилия Эльдаровна",
                            Phone = "+7(982)84-73-12",
                            Workload = 34
                        },
                        new
                        {
                            Id = 11,
                            FIO = "Cафиуллина Лейсан Маратовна",
                            Phone = "+7(951)55-26-71",
                            Workload = 36
                        });
                });

            modelBuilder.Entity("MVVM_WPF_Schedule.Models.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AvatarName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FIO")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FIO")
                        .IsUnique();

                    b.HasIndex("Login")
                        .IsUnique();

                    b.HasIndex("Phone")
                        .IsUnique();

                    b.HasIndex("PostId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AvatarName = "чебупеля.jpg",
                            Email = "ivanov@example.com",
                            FIO = "Иванов Иван Иванович",
                            Login = "ivanov",
                            Password = "password123",
                            Phone = "+79123456789",
                            PostId = 1
                        },
                        new
                        {
                            Id = 2,
                            AvatarName = "чебупеля.jpg",
                            Email = "petrov@example.com",
                            FIO = "Петров Петр Петрович",
                            Login = "petrov",
                            Password = "password456",
                            Phone = "+79234567890",
                            PostId = 2
                        });
                });

            modelBuilder.Entity("MVVM_WPF_Schedule.Models.Entities.Group", b =>
                {
                    b.HasOne("MVVM_WPF_Schedule.Models.Entities.Specialty", "Specialty")
                        .WithMany()
                        .HasForeignKey("SpecialtyCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Specialty");
                });

            modelBuilder.Entity("MVVM_WPF_Schedule.Models.Entities.GroupDiscipline", b =>
                {
                    b.HasOne("MVVM_WPF_Schedule.Models.Entities.Discipline", "Discipline")
                        .WithMany()
                        .HasForeignKey("DisciplineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MVVM_WPF_Schedule.Models.Entities.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MVVM_WPF_Schedule.Models.Entities.Group", null)
                        .WithMany("GroupDisciplines")
                        .HasForeignKey("GroupNumber1");

                    b.HasOne("MVVM_WPF_Schedule.Models.Entities.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId");

                    b.Navigation("Discipline");

                    b.Navigation("Group");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("MVVM_WPF_Schedule.Models.Entities.ScheduleItem", b =>
                {
                    b.HasOne("MVVM_WPF_Schedule.Models.Entities.DayOfWeek", "DayOfWeekDay")
                        .WithMany()
                        .HasForeignKey("DayOfWeekId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MVVM_WPF_Schedule.Models.Entities.GroupDiscipline", "GroupDiscipline")
                        .WithMany()
                        .HasForeignKey("GroupDisciplineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DayOfWeekDay");

                    b.Navigation("GroupDiscipline");
                });

            modelBuilder.Entity("MVVM_WPF_Schedule.Models.Entities.SpecialtyDiscipline", b =>
                {
                    b.HasOne("MVVM_WPF_Schedule.Models.Entities.Discipline", "Discipline")
                        .WithMany()
                        .HasForeignKey("DisciplineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MVVM_WPF_Schedule.Models.Entities.Specialty", "Specialty")
                        .WithMany()
                        .HasForeignKey("SpecialtyCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Discipline");

                    b.Navigation("Specialty");
                });

            modelBuilder.Entity("MVVM_WPF_Schedule.Models.Entities.User", b =>
                {
                    b.HasOne("MVVM_WPF_Schedule.Models.Entities.Post", "Post")
                        .WithMany()
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");
                });

            modelBuilder.Entity("MVVM_WPF_Schedule.Models.Entities.Group", b =>
                {
                    b.Navigation("GroupDisciplines");
                });
#pragma warning restore 612, 618
        }
    }
}
